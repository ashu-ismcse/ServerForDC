{
  "_args": [
    [
      {
        "raw": "https://github.com/petrica/wav-recorder.git",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "https://github.com/petrica/wav-recorder.git",
        "spec": "git+https://github.com/petrica/wav-recorder.git",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:petrica/wav-recorder.git",
          "sshUrl": "git+ssh://git@github.com/petrica/wav-recorder.git",
          "httpsUrl": "git+https://github.com/petrica/wav-recorder.git",
          "gitUrl": "git://github.com/petrica/wav-recorder.git",
          "shortcut": "github:petrica/wav-recorder",
          "directUrl": "https://raw.githubusercontent.com/petrica/wav-recorder/master/package.json"
        }
      },
      "/Users/a0m0195/Project/DCVoice/node_modules"
    ]
  ],
  "_from": "git+https://github.com/petrica/wav-recorder.git",
  "_id": "cordova-wav-recorder@2.0.0",
  "_inCache": true,
  "_location": "/cordova-wav-recorder",
  "_phantomChildren": {},
  "_requested": {
    "raw": "https://github.com/petrica/wav-recorder.git",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "https://github.com/petrica/wav-recorder.git",
    "spec": "git+https://github.com/petrica/wav-recorder.git",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:petrica/wav-recorder.git",
      "sshUrl": "git+ssh://git@github.com/petrica/wav-recorder.git",
      "httpsUrl": "git+https://github.com/petrica/wav-recorder.git",
      "gitUrl": "git://github.com/petrica/wav-recorder.git",
      "shortcut": "github:petrica/wav-recorder",
      "directUrl": "https://raw.githubusercontent.com/petrica/wav-recorder/master/package.json"
    }
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "git+https://github.com/petrica/wav-recorder.git#3b17462ce0ed8c991dd5c58a8426a09e8680375a",
  "_shasum": "b01c7d4a4ef370c9b4c9fab554e9a8699da08c89",
  "_shrinkwrap": null,
  "_spec": "https://github.com/petrica/wav-recorder.git",
  "_where": "/Users/a0m0195/Project/DCVoice/node_modules",
  "author": {
    "name": "Petrica Martinescu",
    "email": "petrica@martinescu.com"
  },
  "bugs": {
    "url": "https://github.com/petrica/wav-recorder/issues"
  },
  "cordova": {
    "id": "ro.martinescu.audio",
    "platforms": [
      "android"
    ]
  },
  "dependencies": {},
  "description": "Advanced Android Recording that provides access to the recorded buffer to the webview.",
  "devDependencies": {},
  "gitHead": "3b17462ce0ed8c991dd5c58a8426a09e8680375a",
  "homepage": "https://github.com/petrica/wav-recorder#readme",
  "keywords": [
    "ecosystem:cordova",
    "cordova-android"
  ],
  "license": "MIT",
  "name": "cordova-wav-recorder",
  "optionalDependencies": {},
  "readme": "wav-recorder\n============\n\nIntroduction\n------------\n\nPhoneGap Cordova Plugin for Android Platform. Records uncompressed audio data to disk as WAV format. The audio buffer is accessible from the webview, thus it is possible ro render to the client the audio data in real time.\n\nInstallation\n------------\n\nUsing the Cordova Command-line Interface:\n```\ncordova plugin add https://github.com/petrica/wav-recorder.git\n```\n\nInitialize Recorder\n-------------------\n\n```\nvar recorder = new martinescu.Recorder(src, [config], [statusCallback], [bufferCallback]);\n```\n* src - file to write the audio data to, you should use Recorder.location() to work out the exact path after creation\n* config - configure capture format\n  * sampleRate - sample rate: 44100, 22050, 11025, 8000\n  * channels - for now only single channel recording is available: 1 or 2\n  * encoding - this is the bit rate of the recording: 8 or 16\n* statusCallback - callback for recorder status change, including errors. Receives two parameters: first is the status code, the second is the error message, on error. \n* bufferCallback - callback for receiving the current recorder raw audio data\n  \n  \n**Sample Initialization**\n```\n// status callback \nvar statusCallback = function (mediaStatus, error) {\n  if (martinescu.Recorder.STATUS_ERROR == mediaStatus) {\n    alert(error);\n  }\n}\n\n// buffer callback\nvar bufferCallback = function (buffer) {\n  console.log(buffer);\n}\n\nvar recorder = new martinescu.Recorder('/record.wav', { sampleRate: 22050 }, statusCallback, bufferCallback);\n```\n\nStart Recording\n---------------\nStart recording audio data:\n```\nrecorder.record();\n```\n\nStop recording\n--------------\n```\nrecorder.stop();\n```\n\nRecord for a fixed amount of time\n---------------------------------\n```\nrecorder.recordForMillis(durationMilliseconds);\n```\nUse the statusCallback to determine when the audio recording has stopped.\n\nGet file location\n----------------\nFind the path of the created wav file as a local absolute path\n```\nrecorder.location();\n```\n\nRelease Recorder\n----------------\nWhen done with the recorder, call release() in order to free allocated memory.\n```\nrecorder.release();\n```\n\nMedia Status\n------------\n\n```\nRecorder.STATUS_INITIALIZING = 'INITIALIZING';\nRecorder.STATUS_READY = 'READY';\nRecorder.STATUS_RECORDING = 'RECORDING';\nRecorder.STATUS_ERROR = 'ERROR';\nRecorder.STATUS_STOPPED = 'STOPPED';\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/petrica/wav-recorder.git"
  },
  "version": "2.0.0"
}
